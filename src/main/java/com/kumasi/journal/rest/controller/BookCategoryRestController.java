/*
 * Created on 24 Oct 2015 ( Time 23:23:56 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.journal.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.kumasi.journal.domain.BookCategory;
import com.kumasi.journal.business.service.BookCategoryService;
import com.kumasi.journal.web.listitem.BookCategoryListItem;

/**
 * Spring MVC controller for 'BookCategory' management.
 */
@Controller
public class BookCategoryRestController {

	@Resource
	private BookCategoryService bookCategoryService;
	
	@RequestMapping( value="/items/bookCategory",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<BookCategoryListItem> findAllAsListItems() {
		List<BookCategory> list = bookCategoryService.findAll();
		List<BookCategoryListItem> items = new LinkedList<BookCategoryListItem>();
		for ( BookCategory bookCategory : list ) {
			items.add(new BookCategoryListItem( bookCategory ) );
		}
		return items;
	}
	
	@RequestMapping( value="/bookCategory",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<BookCategory> findAll() {
		return bookCategoryService.findAll();
	}

	@RequestMapping( value="/bookCategory/{bookId}/{categoryId}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public BookCategory findOne(@PathVariable("bookId") Integer bookId, @PathVariable("categoryId") Integer categoryId) {
		return bookCategoryService.findById(bookId, categoryId);
	}
	
	@RequestMapping( value="/bookCategory",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public BookCategory create(@RequestBody BookCategory bookCategory) {
		return bookCategoryService.create(bookCategory);
	}

	@RequestMapping( value="/bookCategory/{bookId}/{categoryId}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public BookCategory update(@PathVariable("bookId") Integer bookId, @PathVariable("categoryId") Integer categoryId, @RequestBody BookCategory bookCategory) {
		return bookCategoryService.update(bookCategory);
	}

	@RequestMapping( value="/bookCategory/{bookId}/{categoryId}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("bookId") Integer bookId, @PathVariable("categoryId") Integer categoryId) {
		bookCategoryService.delete(bookId, categoryId);
	}
	
}
