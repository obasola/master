/*
 * Created on 24 Oct 2015 ( Time 23:23:56 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.journal.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.kumasi.journal.domain.Entry;
import com.kumasi.journal.business.service.EntryService;
import com.kumasi.journal.web.listitem.EntryListItem;

/**
 * Spring MVC controller for 'Entry' management.
 */
@Controller
public class EntryRestController {

	@Resource
	private EntryService entryService;
	
	@RequestMapping( value="/items/entry",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<EntryListItem> findAllAsListItems() {
		List<Entry> list = entryService.findAll();
		List<EntryListItem> items = new LinkedList<EntryListItem>();
		for ( Entry entry : list ) {
			items.add(new EntryListItem( entry ) );
		}
		return items;
	}
	
	@RequestMapping( value="/entry",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Entry> findAll() {
		return entryService.findAll();
	}

	@RequestMapping( value="/entry/{identry}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Entry findOne(@PathVariable("identry") Integer identry) {
		return entryService.findById(identry);
	}
	
	@RequestMapping( value="/entry",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Entry create(@RequestBody Entry entry) {
		return entryService.create(entry);
	}

	@RequestMapping( value="/entry/{identry}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Entry update(@PathVariable("identry") Integer identry, @RequestBody Entry entry) {
		return entryService.update(entry);
	}

	@RequestMapping( value="/entry/{identry}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("identry") Integer identry) {
		entryService.delete(identry);
	}
	
}
