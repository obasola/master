/*
 * Created on 24 Oct 2015 ( Time 23:20:28 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.journal.business.service.impl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import com.kumasi.journal.domain.Book;
import com.kumasi.journal.domain.jpa.BookEntity;
import java.util.List;
import com.kumasi.journal.business.service.BookService;
import com.kumasi.journal.business.service.mapping.BookServiceMapper;
import com.kumasi.journal.persistence.PersistenceServiceProvider;
import com.kumasi.journal.persistence.services.BookPersistence;
import org.springframework.stereotype.Component;

/**
 * Implementation of BookService
 */
@Component
public class BookServiceImpl implements BookService {

	private BookPersistence bookPersistence;

	@Resource
	private BookServiceMapper bookServiceMapper;
	
	public BookServiceImpl() {
		bookPersistence = PersistenceServiceProvider.getService(BookPersistence.class);
	}
		
	@Override
	public Book findById(Integer id) {
		BookEntity entity = bookPersistence.load(id);
		return bookServiceMapper.mapBookEntityToBook(entity);
	}

	@Override
	public List<Book> findAll() {
		List<BookEntity> entities = bookPersistence.loadAll();
		List<Book> beans = new ArrayList<Book>();
		for(BookEntity entity : entities) {
			beans.add(bookServiceMapper.mapBookEntityToBook(entity));
		}
		return beans;
	}

	@Override
	public Book save(Book book) {
		return update(book) ;
	}

	@Override
	public Book create(Book book) {
		if(bookPersistence.load(book.getId()) != null) {
			throw new IllegalStateException("already.exists");
		}
		BookEntity bookEntity = new BookEntity();
		bookServiceMapper.mapBookToBookEntity(book, bookEntity);
		BookEntity bookEntitySaved = bookPersistence.save(bookEntity);
		return bookServiceMapper.mapBookEntityToBook(bookEntitySaved);
	}

	@Override
	public Book update(Book book) {
		BookEntity bookEntity = bookPersistence.load(book.getId());
		bookServiceMapper.mapBookToBookEntity(book, bookEntity);
		BookEntity bookEntitySaved = bookPersistence.save(bookEntity);
		return bookServiceMapper.mapBookEntityToBook(bookEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		bookPersistence.delete(id);
	}

	public BookPersistence getBookPersistence() {
		return bookPersistence;
	}

	public void setBookPersistence(BookPersistence bookPersistence) {
		this.bookPersistence = bookPersistence;
	}

	public BookServiceMapper getBookServiceMapper() {
		return bookServiceMapper;
	}

	public void setBookServiceMapper(BookServiceMapper bookServiceMapper) {
		this.bookServiceMapper = bookServiceMapper;
	}

}
