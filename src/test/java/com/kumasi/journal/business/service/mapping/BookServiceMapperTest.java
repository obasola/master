/*
 * Created on 24 Oct 2015 ( Time 23:20:28 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.journal.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.kumasi.journal.domain.Book;
import com.kumasi.journal.domain.jpa.BookEntity;
import com.kumasi.journal.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class BookServiceMapperTest {

	private BookServiceMapper bookServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		bookServiceMapper = new BookServiceMapper();
		bookServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'BookEntity' to 'Book'
	 * @param bookEntity
	 */
	@Test
	public void testMapBookEntityToBook() {
		// Given
		BookEntity bookEntity = new BookEntity();
		bookEntity.setIsbn(mockValues.nextString(20));
		bookEntity.setTitle(mockValues.nextString(75));
		bookEntity.setSubtitle(mockValues.nextString(250));
		bookEntity.setAbstractDescription(mockValues.nextString(255));
		bookEntity.setNumberPages(mockValues.nextInteger());
		bookEntity.setAuthor(mockValues.nextString(45));
		
		// When
		Book book = bookServiceMapper.mapBookEntityToBook(bookEntity);
		
		// Then
		assertEquals(bookEntity.getIsbn(), book.getIsbn());
		assertEquals(bookEntity.getTitle(), book.getTitle());
		assertEquals(bookEntity.getSubtitle(), book.getSubtitle());
		assertEquals(bookEntity.getAbstractDescription(), book.getAbstractDescription());
		assertEquals(bookEntity.getNumberPages(), book.getNumberPages());
		assertEquals(bookEntity.getAuthor(), book.getAuthor());
	}
	
	/**
	 * Test : Mapping from 'Book' to 'BookEntity'
	 */
	@Test
	public void testMapBookToBookEntity() {
		// Given
		Book book = new Book();
		book.setIsbn(mockValues.nextString(20));
		book.setTitle(mockValues.nextString(75));
		book.setSubtitle(mockValues.nextString(250));
		book.setAbstractDescription(mockValues.nextString(255));
		book.setNumberPages(mockValues.nextInteger());
		book.setAuthor(mockValues.nextString(45));

		BookEntity bookEntity = new BookEntity();
		
		// When
		bookServiceMapper.mapBookToBookEntity(book, bookEntity);
		
		// Then
		assertEquals(book.getIsbn(), bookEntity.getIsbn());
		assertEquals(book.getTitle(), bookEntity.getTitle());
		assertEquals(book.getSubtitle(), bookEntity.getSubtitle());
		assertEquals(book.getAbstractDescription(), bookEntity.getAbstractDescription());
		assertEquals(book.getNumberPages(), bookEntity.getNumberPages());
		assertEquals(book.getAuthor(), bookEntity.getAuthor());
	}

}